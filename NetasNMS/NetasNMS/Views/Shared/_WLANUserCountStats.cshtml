<div class="col-lg-12 col-xs-12 col-sm-12">
    <!-- BEGIN INTERACTIVE CHART PORTLET-->
    <div class="portlet light portlet-fit ">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-line-chart font-dark"></i>
                <span class="caption-subject font-dark sbold uppercase"  style="display:block; float:left; font-size: 14px;">WLAN User Statistics</span>
            </div>
        </div>
        <div class="portlet-body">
            <div id="chart_2" class="chart" style="width:100%; height:250px;"></div>
        </div>
    </div>
    <!-- END INTERACTIVE CHART PORTLET-->
</div>

<script src="../assets/global/plugins/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
    var ChartsFlotcharts = function () {
        return {
            initCharts: function (hours) {
                if (!jQuery.plot) return;

                function chart2()
                {
                    if ($('#chart_2').size() != 1) return;

                    var plot = $.plot($("#chart_2"), [
                        {
                            data: hours,
                            label: "Connected User",
                            lines: { lineWidth: 1 },
                            shadowSize: 0
                        }], {
                        series: {
                            lines: {
                                show: true,
                                lineWidth: 2,
                                fill: true,
                                fillColor: { colors: [{ opacity: 0.05 }, { opacity: 0.01 }] }
                            },
                            points: {
                                show: true,
                                radius: 3,
                                lineWidth: 1
                            },
                            shadowSize: 2
                        },
                        grid: {
                            hoverable: true,
                            clickable: true,
                            tickColor: "#eee",
                            borderColor: "#eee",
                            borderWidth: 1
                        },
                        colors: ["#d12610", "#37b7f3", "#52e136"],
                        xaxis: {
                            ticks: 11,
                            tickDecimals: 0,
                            tickColor: "#eee",
                        },
                        yaxis: {
                            ticks: 11,
                            tickDecimals: 0,
                            tickColor: "#eee",
                        }
                    });


                    function showTooltip(x, y, contents) {
                        $('<div id="tooltip">' + contents + '</div>').css({
                            position: 'absolute',
                            display: 'none',
                            top: y + 5,
                            left: x + 15,
                            border: '1px solid #333',
                            padding: '4px',
                            color: '#fff',
                            'border-radius': '3px',
                            'background-color': '#333',
                            opacity: 0.80
                        }).appendTo("body").fadeIn(200);
                    }

                    var previousPoint = null;
                    $("#chart_2").bind("plothover", function (event, pos, item) {
                        $("#x").text(pos.x.toFixed(2));
                        $("#y").text(pos.y.toFixed(2));

                        if (item) {
                            if (previousPoint != item.dataIndex) {
                                previousPoint = item.dataIndex;

                                $("#tooltip").remove();
                                var x = item.datapoint[0].toFixed(2),
                                    y = item.datapoint[1].toFixed(0);

                                showTooltip(item.pageX, item.pageY, item.series.label + " = " + y);
                            }
                        } else {
                            $("#tooltip").remove();
                            previousPoint = null;
                        }
                    });
                }

                chart2();
            }
        }
    }();

    $(document).ready(function () {
        var date;
        var hours = [];

        for (i = 0; i < 24; i++) hours.push([i,0]);

        var countTicks = [
	        { "count": 2585, "time": 1502961311623 }, // 09:15
	        { "count": 1692, "time": 1502964911623 }, // 10:15
	        { "count": 1232, "time": 1502968511623 }, // 11:15
	        { "count": 1504, "time": 1502972111623 }, // 12:15
	        { "count": 1393, "time": 1502975711623 }, // 13:15
	        { "count": 1023, "time": 1502979311623 }, // 14.15
	        { "count": 2099, "time": 1502982911623 }, // 15.15
	        { "count": 1989, "time": 1502986511623 }, // 16.15
	        { "count": 1950, "time": 1502990111623 }, // 17.15
	        { "count": 1903, "time": 1502993711623 }, // 18.15
	        { "count": 1514, "time": 1502997311623 }, // 19.15
	        { "count": 1814, "time": 1503000911623 }, // 20.15
	        { "count": 1547, "time": 1503004511623 }, // 21.15
	        { "count": 2005, "time": 1503008111623 }, // 22:15
	        { "count": 1772, "time": 1503011711623 }, // 23:15
	        { "count": 1362, "time": 1503015311623 }, // 00:15
	        { "count": 1710, "time": 1503018911623 }, // 01:15
	        { "count": 1476, "time": 1503022511623 }, // 02:15
	        { "count": 1252, "time": 1503026111623 }, // 03:15
	        { "count": 2016, "time": 1503029711623 }, // 04:15
	        { "count": 453, "time": 1503033311623 },  // 05:15
	        { "count": 2491, "time": 1503036911623 }, // 06:15
	        { "count": 1519, "time": 1503040511623 }  // 07:15
        ];

        var WLANUserConnectedCountViewModel = {};

        $.ajax({
            url: "http://217.78.97.240:8081/data/dashboard/device",
            success: function (response) {
                countTicks = response;
            }
        });

        WLANUserConnectedCountViewModel.UserCount = ko.mapping.fromJS(countTicks);

        for (i = 0; i < countTicks.length; i++)
        {
            date = new Date(WLANUserConnectedCountViewModel.UserCount()[i].time());
            if (date.getHours() - 3 >= 0)
            {
                hours[date.getHours() - 3] = [date.getHours() - 3, WLANUserConnectedCountViewModel.UserCount()[i].count()];
            }
            else
            {
                if (date.getHours() - 3 == -1) hours[21] = [21, WLANUserConnectedCountViewModel.UserCount()[i].count()];
                else if (date.getHours() - 3 == -2) hours[22] = [22, WLANUserConnectedCountViewModel.UserCount()[i].count()];
                else hours[23] = [23, WLANUserConnectedCountViewModel.UserCount()[i].count()];
            }
        }

        ChartsFlotcharts.initCharts(hours);
    });
</script>