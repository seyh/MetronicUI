
@{
    ViewBag.Title = "Acknowledge Alarms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- BEGIN CONTENT -->
<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <h1 class="page-title">
            Monitor
        </h1>
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <i class="icon-home"></i>
                    <a href="/Dashboard/Index">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>Acknowledge Alarms</span>
                </li>
            </ul>
        </div>
        <!-- END PAGE HEADER-->
        <div class="m-heading-1 border-green m-bordered">
            <h3 style="margin-top:0px; padding-left:20px; width:100%; border-bottom:solid 1px #eef1f5; padding-bottom:10px;">Filter Acknowledge Alarms</h3>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form action="#" class="form-horizontal">
                    <div class="form-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                <div id="filterStartDate" class="input-group date form_date form_datetime bs-datetime">
                                    <input id="startDateinput" class="form-control" size="16" type="text" value="Select start date" readonly>
                                    <span class="input-group-addon">
                                        <button class="btn default date-reset" type="button">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </span>
                                    <span class="input-group-addon">
                                        <button class="btn default date-set" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div id="filterEndDate" class="input-group date form_date form_datetime bs-datetime">
                                    <input id="endDateinput" class="form-control" size="16" type="text" value="Select end date" readonly>
                                    <span class="input-group-addon">
                                        <button class="btn default date-reset" type="button">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </span>
                                    <span class="input-group-addon">
                                        <button class="btn default date-set" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div id="severitydrpmodel" class="col-md-3">
                                <div class="form-group">
                                    <select id="chooseSeverity" class="bs-select form-control" data-bind="options: severityOptions, optionsText: 'name', optionsValue: 'value', optionsCaption: 'Choose severity'"></select>

                                    <!-- ko with: selectedSeverity -->
                                    <p>
                                        Your selection: <span data-bind="text: value"></span>
                                    </p>
                                    <!-- /ko -->
                                </div>
                            </div>
                            <div class="col-md-3">
                                <a href="#" id="filterActiveBtn" class="btn green">
                                    <i class="fa fa-check"></i> Submit
                                </a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div id="eventAlarmContent" class="row">
            <div class="col-md-12">
                <div class="portlet light ">
                    <div class="portlet-title">
                        <div style="float:left" class="tools">
                            <div class="table-group-actions pull-right">
                                <span> </span>
                                <div class="btn-group">
                                    <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="true">
                                        <span id="alarmDrpName">Filter Table</span>
                                        <i class="fa fa-angle-down"></i>
                                    </button>
                                    <ul class="dropdown-menu" role="menu" id="ulAlarms">
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="ALL" tabindex="-1" href="javascript:;">
                                                ALL
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="EMERGENCY" tabindex="-1" href="javascript:;">
                                                EMERGENCY
                                                <span class="badge badge-danger" data-bind="text:EmergencyCount()"> 0 </span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="CRITICAL" tabindex="-1" href="javascript:;">
                                                CRITICAL
                                                <span class="badge badge-warning" data-bind="text:CriticalCount()">0</span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="ALERT" tabindex="-1" href="javascript:;">
                                                ALERT
                                                <span class="badge badge-warning" data-bind="text:AlertCount()"> 0 </span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="ERROR" tabindex="-1" href="javascript:;">
                                                ERROR
                                                <span class="badge badge-danger" data-bind="text:ErrorCount()"> 0 </span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="WARNING" tabindex="-1" href="javascript:;">
                                                WARNING
                                                <span class="badge badge-warning" data-bind="text:WarningCount()"> 0 </span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="NOTICE" tabindex="-1" href="javascript:;">
                                                NOTICE
                                                <span class="badge badge-info" data-bind="text:NoticeCount()"> 0 </span>
                                            </a>
                                        </li>
                                        <li role="presentation">
                                            <a role="menuitem" data-pdsa-dropdown-val="INFORMATION" tabindex="-1" href="javascript:;">
                                                INFORMATION
                                                <span class="badge badge-success" data-bind="text:InformationCount()">0</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <table id="acknowledgealarmtable" class="table table-striped table-bordered table-checkable">
                            <thead>
                                <tr>
                                    <th>
                                        <label class="mt-checkbox mt-checkbox-single mt-checkbox-outline">
                                            <input type="checkbox" class="group-checkable" data-set="#acknowledgealarmtable .checkboxes" />
                                            <span></span>
                                        </label>
                                    </th>
                                    <th class="all">Source</th>
                                    <th class="all">Description</th>
                                    <th class="all">Date from</th>
                                    <th class="all">Date to</th>
                                    <th class="all">Count</th>
                                    <th class="all">Severity</th>
                                    <th class="all">Action</th>
                                </tr>
                            </thead>
                            <tbody data-bind="dataTablesForEach : {
			                                data: filteredAlarms,
			                                options: {
				                                deferRender: true,
				                                paging: true,
				                                fixedColumns: {
					                                leftColumns: 2
				                                },
				                                scrollX: false
			                                }
		                                }">
                                <tr>
                                    <td>
                                        <label class="mt-checkbox mt-checkbox-single mt-checkbox-outline">
                                            <input type="checkbox" class="checkboxes" data-bind="value: alertId" value="" />
                                            <span></span>
                                        </label>
                                    </td>
                                    <td><a href="#"><span data-bind="text: source()"></span></a></td>
                                    <td><span data-bind="text: description()"></span></td>
                                    <td>
                                        <span data-bind="text: moment(dateReceived()).format('DD/MM/YYYY HH:mm:ss')"></span>
                                    </td>
                                    <td><span data-bind="text: moment(statistics.lastDateReceived()).format('DD/MM/YYYY HH:mm:ss')"></span></td>
                                    <td><span data-bind="text: statistics.count"></span></td>
                                    <td style="text-align:center"><i class="fa" data-bind="style: { color : severity() == 'EMERGENCY' ? 'firebrick' :  severity() == 'CRITICAL' ? 'red' :  severity() == 'ALERT' ? 'red' : severity() == 'ERROR' ? 'coral' :  severity() == 'WARNING' ? 'darkcyan' :  severity() == 'NOTICE' ? '#445deb' :  severity() == 'INFORMATION' ? '#06c2cc' : 'black'}, css: {'fa-bolt' : severity() == 'EMERGENCY', 'fa-bullhorn' : severity() == 'CRITICAL', 'fa-bullseye' : severity() == 'ALERT', 'fa-exclamation-circle' : severity() == 'ERROR', 'fa-warning' : severity() == 'WARNING', 'fa-bell' : severity() == 'NOTICE', 'fa-info-circle' : severity() == 'INFORMATION' }"></i></td>
                                    <td>
                                        <div class="btn-group pull-right">
                                            <button class="btn green btn-xs btn-outline dropdown-toggle" data-toggle="dropdown">
                                                Tools
                                                <i class="fa fa-angle-down"></i>
                                            </button>
                                            <ul class="dropdown-menu pull-right">
                                                <li>
                                                    <a id="acknowledgeBtn" href="javascript:;">
                                                        <i class="fa fa-share-square-o"></i> Acknowledge
                                                    </a>
                                                </li>
                                                <li>
                                                    <a id="detailBtn" href="javascript:;">
                                                        <i class="fa fa-eye"></i> Detail
                                                    </a>
                                                </li>
                                                <li>
                                                    <a id="deleteBtn" href="javascript:;">
                                                        <i class="fa fa-trash"></i> Delete
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
<!-- END CONTENT -->

<script src="../assets/global/plugins/jquery.min.js" type="text/javascript"></script>
@*<script src="../assets/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>*@
<script src="../assets/global/plugins/sweet-alert-2/script/sweetalert2.all.min.js"></script>
<script>
    $(function () {

        var XHRseverityData = '[{ "value": 0, "name": "Emergency" },{ "value": 1, "name": "Critical" },{ "value": 2, "name": "Alert" }, { "value": 3, "name": "Error" }, { "value": 4, "name": "Warning" }, { "value": 5, "name": "Notice" }, { "value": 6, "name": "Information" }]';
        var alarmData;

        $('.form_date').datetimepicker({
            startDate: '2017-01-01 00:01',
            language: 'en',
            //format: "dd MM yyyy - HH:ii P",
            weekStart: 1,
            todayBtn: true,
            autoclose: true,
            todayHighlight: true,
            isRTL: App.isRTL(),
            pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left")
        });

        var SeverityViewModel = {
            severityOptions: ko.observableArray([]),
            selectedSeverity: ko.observable() // Nothing selected by default
        };
        SeverityViewModel.severityOptions = ko.mapping.fromJS(JSON.parse(XHRseverityData));
        SeverityViewModel.selectedSeverity.subscribe(function (latest) {
        }, SeverityViewModel);
        ko.applyBindings(SeverityViewModel, document.getElementById('severitydrpmodel'));

        var AlarmsViewModel = {
            allAlarms: ko.observableArray([]),
        };

        var FilteredAlarmsViewModel = {
            filteredAlarms : ko.observableArray([]),
            EmergencyCount : ko.observable(0),
            InformationCount : ko.observable(0),
            ErrorCount : ko.observable(0),
            AlertCount : ko.observable(0),
            NoticeCount : ko.observable(0),
            WarningCount : ko.observable(0),
            CriticalCount : ko.observable(0)
        };

        $.ajax({
            url: "http://217.78.97.240:8081/data/alert/events/acked",
            success: function (ResponseActiveAlarms) {
                alarmData = ResponseActiveAlarms;
                AlarmsViewModel.allAlarms = ko.mapping.fromJS(ResponseActiveAlarms);
                FilteredAlarmsViewModel.filteredAlarms = ko.mapping.fromJS(ResponseActiveAlarms);
                for (var i = 0; i < ResponseActiveAlarms.length ; i++) {
                    if (ResponseActiveAlarms[i].severity == 'EMERGENCY') FilteredAlarmsViewModel.EmergencyCount(FilteredAlarmsViewModel.EmergencyCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'INFORMATION') FilteredAlarmsViewModel.InformationCount(FilteredAlarmsViewModel.InformationCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'ERROR') FilteredAlarmsViewModel.ErrorCount(FilteredAlarmsViewModel.ErrorCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'ALERT') FilteredAlarmsViewModel.AlertCount(FilteredAlarmsViewModel.AlertCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'NOTICE') FilteredAlarmsViewModel.NoticeCount(FilteredAlarmsViewModel.NoticeCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'WARNING') FilteredAlarmsViewModel.WarningCount(FilteredAlarmsViewModel.WarningCount() + 1);
                    if (ResponseActiveAlarms[i].severity == 'CRITICAL') FilteredAlarmsViewModel.CriticalCount(FilteredAlarmsViewModel.CriticalCount() + 1);
                }

                ko.applyBindings(FilteredAlarmsViewModel, document.getElementById('eventAlarmContent'));
            }
        });


        ko.bindingHandlers.dataTablesForEach = {
            page: 0,
            init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                var binding = ko.utils.unwrapObservable(valueAccessor());

                ko.unwrap(binding.data);

                if (binding.options.paging) {
                    binding.data.subscribe(function (changes) {
                        var table = $(element).closest('table').DataTable();
                        ko.bindingHandlers.dataTablesForEach.page = table.page();
                        table.destroy();
                    }, null, 'arrayChange');
                }

                var nodes = Array.prototype.slice.call(element.childNodes, 0);
                ko.utils.arrayForEach(nodes, function (node) {
                    if (node && node.nodeType !== 1) {
                        node.parentNode.removeChild(node);
                    }
                });

                return ko.bindingHandlers.foreach.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
            },
            update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
                var binding = ko.utils.unwrapObservable(valueAccessor()),
                    key = 'DataTablesForEach_Initialized';

                ko.unwrap(binding.data);

                var table;
                if (!binding.options.paging) {
                    table = $(element).closest('table').DataTable();
                    table.destroy();
                }

                ko.bindingHandlers.foreach.update(element, valueAccessor, allBindings, viewModel, bindingContext);

                table = $(element).closest('table').DataTable(binding.options);

                if (binding.options.paging) {
                    if (table.page.info().pages - ko.bindingHandlers.dataTablesForEach.page === 0) {
                        table.page(--ko.bindingHandlers.dataTablesForEach.page).draw(false);
                    } else {
                        table.page(ko.bindingHandlers.dataTablesForEach.page).draw(false);
                    }
                }

                if (!ko.utils.domData.get(element, key) && (binding.data || binding.length)) {
                    ko.utils.domData.set(element, key, true);
                }

                return {
                    controlsDescendantBindings: true
                };
            }
        };

        $("#ulAlarms li a").on("click", function () {
            var selectedAlarm = $(this).data('pdsa-dropdown-val');
            $("#alarmDrpName").text(selectedAlarm);
            var filteredAlarms = [];
            FilteredAlarmsViewModel.filteredAlarms([]);

            if (selectedAlarm == "ALL")
            {
                FilteredAlarmsViewModel.filteredAlarms.push.apply(FilteredAlarmsViewModel.filteredAlarms, AlarmsViewModel.allAlarms());
            }
            else
            {
                for (var i = 0; i < AlarmsViewModel.allAlarms().length; i++) {
                    if (AlarmsViewModel.allAlarms()[i].severity() == selectedAlarm) filteredAlarms.push(AlarmsViewModel.allAlarms()[i]);
                }
                FilteredAlarmsViewModel.filteredAlarms.push.apply(FilteredAlarmsViewModel.filteredAlarms, filteredAlarms);
            }
        });

        var strSeverity = '';
        $('#chooseSeverity').change(function () {
            strSeverity = $(this).val();
        })

        $("#acknowledgeBtn").on("click", function () {
            var selectedId = '';
        });


        $("#detailBtn").on("click", function () {

        });

        $("#deleteBtn").on("click", function () {

        });

        var filterStartDate = '';
        var filterEndDate = '';

        $('#filterActiveBtn').on('click', function ()
        {
            FilteredAlarmsViewModel.filteredAlarms([]);
            FilteredAlarmsViewModel.EmergencyCount(0);
            FilteredAlarmsViewModel.InformationCount(0);
            FilteredAlarmsViewModel.ErrorCount(0);
            FilteredAlarmsViewModel.AlertCount(0);
            FilteredAlarmsViewModel.NoticeCount(0);
            FilteredAlarmsViewModel.WarningCount(0);
            FilteredAlarmsViewModel.CriticalCount(0);

            filterStartDate = (moment($('#filterStartDate').data().date).unix())*1000;
            filterEndDate = (moment($('#filterEndDate').data().date).unix())*1000;

            if (typeof ($('#filterEndDate').data().date) === 'undefined' || typeof ($('#filterStartDate').data().date) === 'undefined' || filterStartDate === '' || filterEndDate === '' || !isNaN($('#filterEndDate').data().date) || !isNaN($('#filterStartDate').data().date))
            {
                swal(
                    'Oops...',
                    'Please choose your date for filter the table!',
                    'error'
                )
            }
            else if (filterStartDate > filterEndDate)
            {
                swal(
                    'Oops...',
                    'Your start date can not be after the end date!',
                    'error'
                )
            }
            else if(filterStartDate !=null & filterEndDate !=null & strSeverity == '')
            {
                $.ajax({
                    url: "http://217.78.97.240:8081/data/alert/events/filter/true/" + filterStartDate + "/" + filterEndDate,
                    success: function (ResponseActiveAlarms) {
                        ko.mapping.fromJS(ResponseActiveAlarms, {}, FilteredAlarmsViewModel.filteredAlarms);
                        for (var i = 0; i < ResponseActiveAlarms.length ; i++) {
                            if (ResponseActiveAlarms[i].severity == 'EMERGENCY') FilteredAlarmsViewModel.EmergencyCount(FilteredAlarmsViewModel.EmergencyCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'INFORMATION') FilteredAlarmsViewModel.InformationCount(FilteredAlarmsViewModel.InformationCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'ERROR') FilteredAlarmsViewModel.ErrorCount(FilteredAlarmsViewModel.ErrorCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'ALERT') FilteredAlarmsViewModel.AlertCount(FilteredAlarmsViewModel.AlertCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'NOTICE') FilteredAlarmsViewModel.NoticeCount(FilteredAlarmsViewModel.NoticeCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'WARNING') FilteredAlarmsViewModel.WarningCount(FilteredAlarmsViewModel.WarningCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'CRITICAL') FilteredAlarmsViewModel.CriticalCount(FilteredAlarmsViewModel.CriticalCount() + 1);
                        }
                    }
                });
            }
            else {
                $.ajax({
                    url: "http://217.78.97.240:8081/data/alert/events/filter/true/ " + filterStartDate + "/" + filterEndDate + "/" + strSeverity,
                    success: function (ResponseActiveAlarms) {
                        ko.mapping.fromJS(ResponseActiveAlarms, {}, FilteredAlarmsViewModel.filteredAlarms);
                        for (var i = 0; i < ResponseActiveAlarms.length ; i++) {
                            if (ResponseActiveAlarms[i].severity == 'EMERGENCY') FilteredAlarmsViewModel.EmergencyCount(FilteredAlarmsViewModel.EmergencyCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'INFORMATION') FilteredAlarmsViewModel.InformationCount(FilteredAlarmsViewModel.InformationCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'ERROR') FilteredAlarmsViewModel.ErrorCount(FilteredAlarmsViewModel.ErrorCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'ALERT') FilteredAlarmsViewModel.AlertCount(FilteredAlarmsViewModel.AlertCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'NOTICE') FilteredAlarmsViewModel.NoticeCount(FilteredAlarmsViewModel.NoticeCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'WARNING') FilteredAlarmsViewModel.WarningCount(FilteredAlarmsViewModel.WarningCount() + 1);
                            if (ResponseActiveAlarms[i].severity == 'CRITICAL') FilteredAlarmsViewModel.CriticalCount(FilteredAlarmsViewModel.CriticalCount() + 1);
                        }
                    }
                });
            }
            console.log('Start date :' + filterStartDate + ' End date : ' + filterEndDate + ' Severity :' + strSeverity);
        });

        $('#acknowledgealarmtable').find('.group-checkable').change(function () {
            var set = $(this).attr("data-set");
            var checked = $(this).is(":checked");
            $(set).each(function () {
                if (checked) {
                    $(this).prop("checked", true);
                    $(this).parents('tr').addClass("active");
                } else {
                    $(this).prop("checked", false);
                    $(this).parents('tr').removeClass("active");
                }
            });
        });

        $('#acknowledgealarmtable').on('change', 'tbody tr .checkboxes', function () {
            $(this).parents('tr').toggleClass("active");
        });
    });
</script>   